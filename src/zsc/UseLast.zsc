class UseLastHandler : EventHandler
{
    private Array<PowerupCommon> lastPickups;
    
    uint AddItem(PowerupCommon item)
    {
        let pos = lastPickups.Push(item);
        if (inventory_debug)
            Console.Printf("Adding "..item.GetClassName().." to last-used array at position "..pos);
        return pos;
    }
    
    void RemoveItem(PowerupCommon item)
    {
        let pos = lastPickups.Find(item);
        
        if (pos < lastPickups.Size())
        {
            lastPickups.Delete(pos);
            if (inventory_debug)
                Console.Printf("Removing "..item.GetClassName().." from last-used array at position "..pos);
        }
    }
    
    private PowerupCommon GetLastItem()
    {
        PowerupCommon last;
        while (last == null && lastPickups.Size() > 0)
        {
            last = lastPickups[lastPickups.Size() - 1];
            //lastPickups.Pop();
        }
        return last;
    }

    override void NetworkProcess (ConsoleEvent e) 
    {
        if (e.isManual && e.Name == "SimpleInventoryUseLast")
        {
            let last = GetLastItem();
        
            if (last != null)
            {
                String usemsg = Stringtable.Localize("$INVENTORY_USE_ITEM");
                Console.Printf(usemsg.."...");
                players[e.Player].mo.UseInventory(last);
            }
            else
            {
                String failmsg = Stringtable.Localize("$INVENTORY_NO_ITEM");
                Console.Printf(failmsg);
            }
        }
    }
}
